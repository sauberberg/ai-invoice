import streamlit as st
from dotenv import load_dotenv
import os

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (.env)
load_dotenv()

from langchain_community.chat_models import ChatOpenAI
from langchain.prompts import PromptTemplate
from langchain.chains import LLMChain

st.set_page_config(page_title="Invoice AI", layout="centered")

st.title("üåç AI Multi-country Accounting")
country = st.selectbox("–°—Ç—Ä–∞–Ω–∞", ["–ì–µ—Ä–º–∞–Ω–∏—è", "–ü–æ–ª—å—à–∞", "–§—Ä–∞–Ω—Ü–∏—è", "–ò—Ç–∞–ª–∏—è"])
company_type = st.selectbox("–¢–∏–ø —é—Ä. –ª–∏—Ü–∞", ["GmbH", "Freelancer", "SAS", "SRL"])
vat = st.selectbox("–ü–ª–∞—Ç–µ–ª—å—â–∏–∫ –ù–î–°?", ["–î–∞", "–ù–µ—Ç"])
language = st.selectbox("–Ø–∑—ã–∫", ["Deutsch", "English", "Fran√ßais", "Polski"])

file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ PDF/JPG/PNG", type=["pdf", "jpg", "png"])
invoice_text = st.text_area("–ò–ª–∏ –≤—Å—Ç–∞–≤—å—Ç–µ OCR-—Ç–µ–∫—Å—Ç", height=140)

# –ü—Ä–æ–º—Ç –¥–ª—è AI
prompt = PromptTemplate.from_template("""
–°—Ç—Ä–∞–Ω–∞: {country}
–Æ—Ä. –ª–∏—Ü–æ: {company_type}
VAT: {vat}
–Ø–∑—ã–∫: {language}

–ò–∑–≤–ª–µ–∫–∏ –∏–∑ –∏–Ω–≤–æ–π—Å–∞ –∫–ª—é—á–µ–≤—ã–µ –ø–æ–ª—è –¥–ª—è –æ—Ç—á—ë—Ç–∞ –ø–æ –∑–∞–∫–æ–Ω–∞–º —Å—Ç—Ä–∞–Ω—ã. –í–µ—Ä–Ω–∏ JSON.

–¢–µ–∫—Å—Ç –∏–Ω–≤–æ–π—Å–∞:
{invoice_text}
""")

# –í–∞–∂–Ω–æ! –£–∫–∞–∂–∏ —è–≤–Ω–æ openai_api_key –∏ —É–∫–∞–∂–∏ –º–æ–¥–µ–ª—å (gpt-4o –∏–ª–∏ gpt-3.5-turbo)
llm = ChatOpenAI(
    model="gpt-4o", 
    openai_api_key=os.getenv("OPENAI_API_KEY")
)

chain = LLMChain(llm=llm, prompt=prompt)

# –û—Å–Ω–æ–≤–Ω–∞—è AI-–∫–Ω–æ–ø–∫–∞
if st.button("–ò–∑–≤–ª–µ—á—å –¥–∞–Ω–Ω—ã–µ AI"):
    with st.spinner("AI-–æ–±—Ä–∞–±–æ—Ç–∫–∞..."):
        if not invoice_text.strip():
            st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—Å—Ç–∞–≤—å—Ç–µ OCR-—Ç–µ–∫—Å—Ç –∏–Ω–≤–æ–π—Å–∞!")
        else:
            result = chain.run(
                country=country,
                company_type=company_type,
                vat=vat,
                language=language,
                invoice_text=invoice_text
            )
            st.success("‚úÖ –î–∞–Ω–Ω—ã–µ –∏–∑–≤–ª–µ—á–µ–Ω—ã AI!")
            st.json(result)
